@using Nop.Web.Models.Checkout;
@using Nop.Web.Components;
@using Nop.Web.Framework.Infrastructure;
@using Nop.Web.Framework.UI;
@model CheckoutPaymentInfoModel

@inject INopHtmlHelper _nopHtmlHelper

@using Nop.Core
@inject IWebHelper webHelper


@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@*we remove the default InputTagHelper to prevent the checkbox duplicating: https://stackoverflow.com/questions/42544961/asp-net-core-custom-input-tag-helper-rendering-duplicate-checkboxes*@
@removeTagHelper Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Nop.Web.Framework
@addTagHelper *, MiniProfiler.AspNetCore.Mvc
@{
    Layout = "_ColumnsOne";
    var storeLocation = webHelper.GetStoreLocation();
    //title
    _nopHtmlHelper.AddTitleParts("Checkout");
    //page class
    _nopHtmlHelper.AppendPageCssClassParts("html-checkout-page");
    _nopHtmlHelper.AppendPageCssClassParts("html-payment-info-page");
}
<div class="page checkout-page payment-info-page">
    @await Component.InvokeAsync(typeof(CheckoutProgressViewComponent), new { step = CheckoutProgressStep.Payment })
    <div class="page-title">
        <h1>Payment information</h1>
    </div>
    <div class="page-body checkout-data">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CheckoutPaymentInfoTop, additionalData = Model })
        <div class="section payment-info">
            <form id="billing-form" asp-controoler="CheckoutPos" asp-action="OpcSavePaymentInfo" method="post">
                <div asp-validation-summary="ModelOnly" class="message-error"></div>
                <div class="info">
                    @await Component.InvokeAsync(Model.PaymentViewComponent)
                </div>
                <div class="buttons">
                    <button type="button" onclick="window.location.href='@(storeLocation)checkoutpos/paymentmethod'" class="button-1">Back</button>

                    <button type="submit" name="nextstep" class="button-1 payment-info-next-step-button">Next</button>
                </div>
            </form>
        </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CheckoutPaymentInfoBottom, additionalData = Model })
        <div class="section order-summary">
            <div class="title">
                <strong>Order summary</strong>
            </div>
            @await Component.InvokeAsync(typeof(OrderSummaryViewComponent), "ShoppingCart")
        </div>
    </div>
</div>
