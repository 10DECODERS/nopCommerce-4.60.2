@using Nop.Core.Domain.Catalog;
@using Nop.Web.Components;
@using Nop.Web.Framework.Mvc.Routing;
@using Nop.Web.Models.ShoppingCart;
@model ShoppingCartModel

@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax

@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject OrderSettings orderSettings


@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";
    //var model = (ShoppingCartModel)ViewBag.product;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

<style>

    .test1 {
        /*padding: 1%;*/
        /*margin-left: auto;*/
        display: inline-block;
    }
    /* ----------- Laptop ----------- */
    @@media screen and (min-device-width: 1200px) and (max-device-width: 1600px) and (-webkit-min-device-pixel-ratio: 1) {
        .test {
            display: initial;
            position: absolute;
        }

        .test1 {
            display: initial;
        }
    }
    /* ----------- Laptop ----------- */
    @@media screen and (min-device-width: 1200px) and (max-device-width: 1600px) and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi) {
        .test {
            display: initial;
            position: absolute;
        }
    }

    @@media (min-width: 576px) {
        .col-sm-6 {
            flex: 0 0 auto;
            width: 45%;
        }
    }

</style>



<div class="header">
    <h2> New Order </h2>
    <div class="header-lower">
        <div class="container">
            <div class="row">
                <div class="col-sm-6">
                    <div class="search-box test1" id="small-search-box-form">
                        <input type="text" class="search-box-text" id="ScanInput" autocomplete="off" name="myTextValue" value="" placeholder="Scan" aria-label="Scan Product" />
                        <button id="ScanButton" onclick="handleChange()" class="button-1 search-box-button">Scan</button>
                    </div>
                </div>
                <div class="col-sm-6" style="display:none">
                    <div class="search-box">
                        @await Component.InvokeAsync(typeof(SearchBoxViewComponent))
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="search-box  test test1" id="small-search-box-form">
                        @await Component.InvokeAsync(typeof(SearchBoxViewComponent))
                    </div>

                </div>
            </div>
        </div>
    </div>
    <form asp-action="Neworder" asp-controller="Pos" asp-route="ShoppingCart" method="post" enctype="multipart/form-data" id="shopping-cart-form">
        <div class="page shopping-cart-page">
            <div class="page-title">
            </div>
            <div class="container">
                <div class="row">
                    @if (Model.Items.Count() > 0)
                    {
                        <table class="cart table table-bordered">
                            <colgroup>
                                @if (Model.ShowSku)
                                {
                                    <col width="1" />
                                }
                                @if (Model.ShowProductImages)
                                {
                                    <col width="1" />
                                }
                                <col width="1" />
                                @if (Model.ShowVendorName)
                                {
                                    <col width="1" />
                                }
                                <col width="1" />
                                <col width="1" />
                                <col width="1" />
                                @if (Model.IsEditable)
                                {
                                    <col width="1" />
                                }
                            </colgroup>
                            <thead class="hidden-xs">
                                <tr class="border border-1 cart-header-row">
                                    <th>
                                        SKU
                                    </th>
                                    <th class="picture">
                                        Image
                                    </th>
                                    <th class="products-title">
                                        Product(s)
                                    </th>
                                    <th class="border border-1">
                                        Price
                                    </th>
                                    <th class="border border-1">
                                        Qty.
                                    </th>
                                    <th class="end">
                                        Total
                                    </th>
                                    @if (Model.IsEditable)
                                    {
                                        <th>
                                            Remove
                                        </th>
                                    }

                                </tr>
                            </thead>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(m=>item.Sku)
                                    </td>
                                    <td class="product-picture">
                                        <a href="@(Url.RouteUrl<Product>(new { SeName = item.ProductSeName }))"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                                    </td>
                                    <td class="product">
                                        <a href="@(Url.RouteUrl<Product>(new { SeName = item.ProductSeName }))">@item.ProductName</a>
                                        @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                        {
                                            <div class="attributes">
                                                @Html.Raw(item.AttributeInfo)
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(item.RecurringInfo))
                                        {
                                            <div class="recurring-info">
                                                @Html.Raw(item.RecurringInfo)
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(item.RentalInfo))
                                        {
                                            <div class="rental-info">
                                                @Html.Raw(item.RentalInfo)
                                            </div>
                                        }
                                        @if (Model.IsEditable && item.AllowItemEditing)
                                        {
                                            var editCartItemUrl = Url.RouteUrl<Product>(new { SeName = item.ProductSeName }, webHelper.GetCurrentRequestProtocol());
                                            editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid", item.Id.ToString());
                                            <div class="edit-item">
                                                <a href="@editCartItemUrl">Edit</a>
                                            </div>
                                        }
                                        @if (item.Warnings.Count > 0)
                                        {
                                            <div class="message-error">
                                                <ul>
                                                    @foreach (var warning in item.Warnings)
                                                    {
                                                        <li>@Html.Raw(warning)</li>
                                                    }
                                                </ul>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m=>item.UnitPrice)
                                    </td>
                                    <td class="qty nobr">
                                        @if (Model.IsEditable)
                                        {
                                            if (item.AllowedQuantities.Count > 0)
                                            {
                                                <select name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" class="qty-dropdown form-control">
                                                    @foreach (var qty in item.AllowedQuantities)
                                                    {
                                                        <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                    }
                                                </select>
                                            }
                                            else
                                            {
                                                <input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input form-control" aria-label="ShoppingCart.Quantity" style="width: auto;margin: auto;" />
                                            }

                                        }
                                        else
                                        {
                                            <span>@item.Quantity</span>
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m=>item.SubTotal)
                                    </td>
                                    <td class="remove-from-cart">
                                        @if (item.DisableRemoval)
                                        {
                                            <text>&nbsp;</text>
                                        }
                                        else
                                        {
                                            <input type="checkbox" name="removefromcart" id="removefromcart@(item.Id)" value="@(item.Id)" aria-label="ShoppingCart.Remove" />
                                            <button type="button" name="updatecart" class="remove-btn" onclick="$('#removefromcart@(item.Id)').attr('checked', true); $('#updatecart').click();"></button>
                                        }
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <br />
                        <div class="no-data">
                            <p>Your Shopping Cart is empty!</p>
                        </div>

                    }
                    @if (Model.IsEditable)
                    {
                        <div class="update-continue-button">
                            <div class="common-buttons" style="background-color: white;">

                                <div class="update-cart"><button type="submit" name="updatecart" id="updatecart" class="btn btn-default update-cart-button">UpdateCart</button></div>

                                <div class="update-cart"> <button type="button" class="box-button btn btn-primary" onclick="location.href='@Url.Action("StartCheckout","Pos")'"> Checkout </button></div>
                            </div>

                        </div>
                    }

                </div>
            </div>
        </div>
    </form>
</div>






<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
<script>

    function handleChange() {
        var myInputValue = $("#ScanInput").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("Scan", "Pos")",
            data: { myInputValue: myInputValue },
            success: function (result) {
                console.log(result);
                window.location.reload();
            }
        });
    }

</script>