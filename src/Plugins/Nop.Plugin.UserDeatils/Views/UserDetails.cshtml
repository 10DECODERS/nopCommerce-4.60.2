@using Nop.Core;
@using Nop.Core.Domain.Customers;
@using Nop.Data;
@using Nop.Services.Customers;
@inject IWorkContext workContext
@inject ICustomerService customerService;
@inject IRepository<CustomerRole> _customerRoleRepository

<style>
    .search-box input.search-box-text {
        width: auto;
    }

    a:link {
        text-decoration: none;
        color: inherit;
    }

    a:visited {
        text-decoration: none;
        color: inherit;
    }

    a:hover {
        text-decoration: none;
        color: inherit;
    }

    a:active {
        text-decoration: none;
        color: inherit;
    }

    .userdetails {
        padding: 2%;
        font-size: 16px;
        color: #777;
        font: normal 16px Arial,Helvetica,sans-serif;
    }
</style>

@{
    var UserEmail = await workContext.GetCurrentCustomerAsync();
    var role = await customerService.GetCustomerRoleIdsAsync(UserEmail);

    var query = (from cr in _customerRoleRepository.Table
                 where role.Contains(cr.Id)
                 select cr).ToList();
}

@if (UserEmail.Username != null)
{
    <div class="row col-12">

        <div class="col-12">
            <p class="userdetails">
                Hi @UserEmail.Username you have
                @foreach (var item in query)
                {
                    @item.Name

                    <text>&nbsp;</text>
                }
                access only
            </p>
        </div>
    </div>
}

