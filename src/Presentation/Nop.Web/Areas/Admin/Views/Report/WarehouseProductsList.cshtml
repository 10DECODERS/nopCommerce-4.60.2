@model WarehouseSearchModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.Reports.Warehouses").Text;
    NopHtml.SetActiveMenuItemSystemName("Warehouses");
}

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@*we remove the default InputTagHelper to prevent the checkbox duplicating: https://stackoverflow.com/questions/42544961/asp-net-core-custom-input-tag-helper-rendering-duplicate-checkboxes*@
@removeTagHelper Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Nop.Web.Framework
@addTagHelper *, MiniProfiler.AspNetCore.Mvc

@{
    const string hideSearchBlockAttributeName = "LowStockPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<form asp-controller="Report" asp-action="WarehouseProductsList" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            Warehouses
        </h1>
        <div class="float-right">
            &nbsp;
        </div>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search">
                        <div class="card-body">
                            </div>


                        <div class="card card-default">
                            <div class="card-body">
                                <nop-doc-reference asp-string-resource="@T("Admin.Documentation.Reference.Reports", Docs.Reports + Utm.OnAdmin)" />

                                @await Html.PartialAsync("Table", new DataTablesModel
                                {
                                Name = "products-grid",

                                UrlRead = new DataUrl("WarehouseProductsList", "Report", null),
                                SearchButtonId = "search-products",
                                Length = Model.PageSize,
                                LengthMenu = Model.AvailablePageSizes,

                                ColumnCollection = new List<ColumnProperty>
                                {
                                new ColumnProperty(nameof(WarehouseModel.Id))
                                {
                                Title = "Date",
                                Width = "150"
                                },
                                new ColumnProperty(nameof(WarehouseModel.WarehouseId))
                                {
                                Title = "OrderID",
                                Width = "150"
                                },
                                new ColumnProperty(nameof(WarehouseModel.WarehouseName))
                                {
                                Title = "ProductName",
                                Width = "300"
                                },
                                new ColumnProperty(nameof(WarehouseModel.StockQuantity))
                                {
                                Title = "ProductID",
                                Width = "150"
                                }
                                }
                                })

                                <script asp-location="Footer">
                                    function renderColumnName(data, type, row, meta) {
                                        var textRenderer = $.fn.dataTable.render.text().display;
                                        var res = data;
                                        if (row.Attributes !== null) {
                                            return textRenderer(res) + '<div><i>' + textRenderer(row.Attributes) + '</i></div>';
                                        }
                                        else {
                                            return textRenderer(res);
                                        }
                                    }
                                </script>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </section>
</form>